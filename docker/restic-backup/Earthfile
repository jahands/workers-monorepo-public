VERSION --raw-output 0.8
PROJECT jahands/docker

version:
	FROM alpine:3
	COPY (../common+version/VERSION --package=docker/restic-backup) .
	SAVE ARTIFACT ./VERSION

build:
	FROM restic/restic:0.17.1
	WORKDIR /work
	RUN apk add --update --no-cache \
		curl \
		mailx \
		moreutils \
		bash \
		tzdata

	RUN ln -s /usr/share/zoneinfo/America/Chicago /etc/localtime
	ENV TZ=America/Chicago

	RUN \
		mkdir -p /mnt/restic /var/spool/cron/crontabs /var/log && \
		touch /var/log/cron.log

	ENV RESTIC_REPOSITORY=/mnt/restic
	ENV RESTIC_PASSWORD=""
	ENV RESTIC_TAG=""
	ENV NFS_TARGET=""
	ENV BACKUP_CRON="0 */6 * * *"
	ENV CHECK_CRON=""
	ENV RESTIC_INIT_ARGS=""
	ENV RESTIC_FORGET_ARGS=""
	ENV RESTIC_JOB_ARGS=""
	ENV RESTIC_DATA_SUBSET=""
	ENV MAILX_ARGS=""
	ENV OS_AUTH_URL=""
	ENV OS_PROJECT_ID=""
	ENV OS_PROJECT_NAME=""
	ENV OS_USER_DOMAIN_NAME="Default"
	ENV OS_PROJECT_DOMAIN_ID="default"
	ENV OS_USERNAME=""
	ENV OS_PASSWORD=""
	ENV OS_REGION_NAME=""
	ENV OS_INTERFACE=""
	ENV OS_IDENTITY_API_VERSION=3

	# openshift fix
	RUN mkdir /.cache && \
		chgrp -R 0 /.cache && \
		chmod -R g=u /.cache && \
		chgrp -R 0 /mnt && \
		chmod -R g=u /mnt && \
		chgrp -R 0 /var/spool/cron/crontabs/root && \
		chmod -R g=u /var/spool/cron/crontabs/root && \
		chgrp -R 0 /var/log/cron.log && \
		chmod -R g=u /var/log/cron.log

	# /data is the dir where you have to put the data to be backed up
	VOLUME /data

	COPY app/backup.sh /usr/local/bin/backup
	COPY app/check.sh /usr/local/check
	COPY app/entrypoint.sh /entrypoint.sh

	ENTRYPOINT ["/entrypoint.sh"]
	CMD ["tail","-fn0","/var/log/cron.log"]

	# Save the image
	COPY +version/VERSION .
	LET docker_tag=$(cat ./VERSION)
	IF [ -z "$docker_tag" ]
		# SAVE IMAGE --push gitea.uuid.rocks/geobox/restic-backup:nightly
	ELSE
		SAVE IMAGE --push gitea.uuid.rocks/geobox/restic-backup:$docker_tag \
											gitea.uuid.rocks/geobox/restic-backup:latest
	END

